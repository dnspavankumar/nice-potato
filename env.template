# ===========================================
# EMAIL RAG - ENVIRONMENT VARIABLES
# ===========================================
# Copy this file to .env.local and fill in your actual values

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
# PostgreSQL database URL (optional - for user data storage)
# DATABASE_URL="postgresql://username:password@localhost:5432/emailrag"

# ===========================================
# PINECONE VECTOR DATABASE
# ===========================================
# Get your API key from: https://www.pinecone.io/
# NO environment variable needed - just the API key!
PINECONE_API_KEY="your_pinecone_api_key_here"
PINECONE_INDEX_NAME="emailrag-index"

# ===========================================
# GROQ API (LLM SERVICE)
# ===========================================
# Get your API key from: https://console.groq.com/
GROQ_API_KEY="your_groq_api_key_here"

# ===========================================
# GOOGLE OAUTH & GMAIL API
# ===========================================
# Get these from: https://console.cloud.google.com/
# 1. Create a new project or select existing
# 2. Enable Gmail API
# 3. Go to Credentials → Create Credentials → OAuth 2.0 Client IDs
# 4. Set Application Type: "Web application"
# 5. Add authorized redirect URIs:
#    - http://localhost:3000/api/auth/callback/google
#    - https://yourdomain.com/api/auth/callback/google (for production)
# 6. Copy Client ID and Client Secret below (NO credentials.json file needed!)

GOOGLE_CLIENT_ID="your_google_client_id_here"
GOOGLE_CLIENT_SECRET="your_google_client_secret_here"

# ===========================================
# NEXTAUTH.JS CONFIGURATION
# ===========================================
# For authentication and session management
NEXTAUTH_URL="http://localhost:3000"
NEXTAUTH_SECRET="your_nextauth_secret_here"

# ===========================================
# GMAIL API SPECIFIC
# ===========================================
# These should match your Google OAuth credentials
GMAIL_CLIENT_ID="your_gmail_client_id_here"
GMAIL_CLIENT_SECRET="your_gmail_client_secret_here"
GMAIL_REDIRECT_URI="http://localhost:3000/api/auth/callback/google"

# ===========================================
# APPLICATION CONFIGURATION
# ===========================================
# Node environment
NODE_ENV="development"

# ===========================================
# SETUP INSTRUCTIONS
# ===========================================
# 1. Copy this file to .env.local
# 2. Fill in all the required values above
# 3. Make sure .env.local is in your .gitignore file
# 4. Never commit .env.local to version control

# ===========================================
# REQUIRED SERVICES SETUP
# ===========================================
# 1. PINECONE (UPDATED - NO ENVIRONMENT NEEDED!):
#    - Sign up at https://www.pinecone.io/
#    - Create a project
#    - Get your API key
#    - The app will auto-create the index with integrated embeddings
#    - Uses llama-text-embed-v2 model automatically

# 2. GROQ:
#    - Sign up at https://console.groq.com/
#    - Generate an API key
#    - Add to GROQ_API_KEY

# 3. GOOGLE CLOUD:
#    - Go to https://console.cloud.google.com/
#    - Create/select a project
#    - Enable Gmail API
#    - Create OAuth 2.0 credentials
#    - Add redirect URIs for your domains

# ===========================================
# WHAT'S NEW IN THIS VERSION
# ===========================================
# ✅ Uses Pinecone's integrated embedding models
# ✅ No manual embedding generation needed
# ✅ No PINECONE_ENVIRONMENT variable needed
# ✅ Automatic vector generation from text
# ✅ Better performance and accuracy
# ✅ Simpler setup process
